{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutTextUtils","onClick","toggle","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","myArr","split","join","length","Alert","alert","role","word","lower","charAt","slice","captalize","msg","defaultProps","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c69756ad.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types' \r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n              <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutTextUtils}</a>\r\n        </li>\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutTextUtils}</Link>\r\n        </li> */}\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input onClick={props.toggle} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired,\r\n    aboutTextUtils:PropTypes.string,\r\n\r\n}\r\nNavbar.defaultProps={\r\n    title:'set title here',\r\n    aboutTextUtils:'about text here',\r\n}","import React,{useState} from 'react'\r\n// {useState}  is called hooks in react \r\nexport default function TextForm(props) {\r\n    \r\n    const handleOnChange=(event)=>{\r\n  \r\n// console.log('on Change');\r\nsetText(event.target.value)\r\n\r\n    }\r\n    const handleUpClick=()=>{\r\n        // console.log('The uppercase clicked'+ text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case\",\"success\")\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase;\r\n        setText(newText); \r\n        props.showAlert(\"Converted to upper case\", \"success\")\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText=\"\";\r\n        setText(newText); \r\n        props.showAlert(\"Converted to upper case\", \"success\")\r\n\r\n    }\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copied to clipboard\", \"success\")\r\n\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let myArr = text.split(/[ ]+/);\r\n        setText(myArr.join(\" \"));\r\n        props.showAlert(\"Reomved Extra Spaces\", \"success\")\r\n\r\n    }\r\n    // const handleColorClick=()=>{\r\n    //     let newText={myStle};\r\n    //     setText(newText); \r\n    // }\r\n \r\n    const [text, setText] = useState('')\r\n    // here text is s simppley text and setText is a function we cannot change the value using text  but using the setText \r\n    // setText=\"No you have not to enter value\";  //invalid\r\n    // text='new text'   //invalid\r\n    // setText(\"No you cannot enter the value here\");\r\n    // let myStle={\r\n    //  color:'red',\r\n    //  backgroundColor:'blue'       \r\n    // }\r\n    // }\r\n    return (\r\n        <>\r\n       \r\n        <div style={{color:props.mode==='light'?'black':'white'}}>\r\n<h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#042743':'white' ,color:props.mode==='light'?'black':'white'}}  id=\"myBox\" rows=\"1\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n{/* <button className=\"btn btn-primary mx-1\" onClick={handleColorClick}>Check name limit</button> */}\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h1 className=\"my-3\">Your text summary</h1>\r\n            <p>{text.split(\" \").length} words read and {text.length} characters read</p>\r\n            <p>{.008*text.split(\" \").length} minutes read word and {.008*text.length} minutes read chracters</p>\r\n            <h2>Previw</h2>\r\n            <p>{text.length>0?text:\"Enter something to in the text box to preview here\"}</p>\r\n        </div>\r\n \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n        const captalize=(word)=>{\r\n            const lower= word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n        }\r\n    return (\r\n \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{captalize(props.alert.type)}</strong>:{props.alert.msg}\r\n  {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n  const toggle = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n\n      //   setInterval(() => {\n      //     document.title = \"install TextUtils now\";\n      //   }, 2000);\n      //   setInterval(() => {\n      //     document.title = \"TextUtils is amazing\";\n      //   }, 1500);\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils -Light Mode\";\n    }\n  };\n\n  return (\n    <>\n    {/* <Router> */}\n         <Navbar\n          title=\"TextUtils\"\n          aboutTextUtils=\"about\"\n          mode={mode}\n          toggle={toggle}\n        ></Navbar>\n        {/* <Navbar></Navbar> */}\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          \n            \n            {/* /users  -->component1\n            /users/home -->component2 */}\n            {/* exact is use for exact matching */}\n              {/* <Switch> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm\n                heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert}/> \n          {/* </Route> */}\n          {/* <Route exact path=\"/about\"> */}\n        {/* <About/>  */}\n          {/* </Route> */}\n\n        {/* </Switch> */}\n            \n         \n          {/* <TextForm\n           heading=\"Enter the text to analyze\"\n          mode={mode}\n          showAlert={showAlert} \n        />  */}\n        </div>\n        {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}